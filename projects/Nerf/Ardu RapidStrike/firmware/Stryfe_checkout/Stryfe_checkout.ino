


#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_RESET -1
Adafruit_SSD1306 display(OLED_RESET);

int voltagePin = A3;
float vcc = 5.0;
float vd_factor = 11;
int SPKR = 4;
int DART_IR = A1;
int DSP_PWR = A2;
int buttonPin = A0;
int revSwitch = 3;
int CLIP = 7;
int flywheelPWM = 9;

uint8_t clipU3pin = 10;
uint8_t clipU4pin = 11;
uint8_t clipU6pin = 12;




void setup() {                  
  Serial.begin(9500);
  pinMode(voltagePin, INPUT);
  pinMode(revSwitch, INPUT); 
  pinMode(buttonPin, INPUT);   
  pinMode(CLIP, INPUT);
  pinMode(DART_IR, INPUT);

  pinMode(clipU3pin, INPUT);          // Hall sensors have internal pullups
  pinMode(clipU4pin, INPUT);
  pinMode(clipU6pin, INPUT);

  pinMode(flywheelPWM, OUTPUT);
  pinMode(SPKR, OUTPUT); 
  pinMode(DSP_PWR, OUTPUT); 
  digitalWrite(DSP_PWR, HIGH);
  delay(50);


display.buffer = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x20, 0xE0, 0xE0, 0xE0, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x20, 0xE0, 0xE0, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x20, 0xE0, 0xE0, 0xE0, 0xC0,
0x00, 0x00, 0x20, 0xE0, 0xE0, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x20, 0xE0, 0xC0, 0xC0, 0x00, 0x00,
0x00, 0x20, 0xE0, 0xE0, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x20, 0xE0, 0x20, 0x00, 0x00, 0x20, 0xE0,
0xE0, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x20, 0x20, 0xE0, 0xE0, 0xE0, 0xE0, 0x80, 0x00, 0x00, 0x20,
0x60, 0xE0, 0x60, 0x20, 0x00, 0x00, 0xC0, 0xC0, 0xE0, 0x20, 0x20, 0x20, 0xE0, 0xC0, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF8, 0x96, 0x11, 0x10, 0x91, 0x9F, 0xFF, 0xFF, 0xFE,
0xF0, 0x80, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x84, 0x04, 0x04, 0x04, 0x7F, 0xFB, 0xFB, 0xF1,
0x80, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x80, 0x80, 0xFF, 0x7F, 0x7F, 0x1F, 0x00,
0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x80, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x80, 0xFF,

0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x80, 0xC0, 0xFF, 0xC1, 0x83, 0x07, 0x1F, 0x3F, 0x7E, 0xF8,
0xF0, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x7F, 0x7F, 0xFF, 0x80, 0x80, 0x80, 0xFF, 0x7F, 0x7F, 0x1F,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x7F, 0x7F, 0x06, 0x06, 0x06,
0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0,
0x70, 0x70, 0x70, 0x70, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C,
0x7C, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0x7C, 0x7C, 0x38, 0x38, 0x38, 0xB8, 0xB8, 0x90,
0x90, 0xD0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0x60, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x84, 0x04, 0x04, 0x02,
0x02, 0x02, 0x03, 0x03, 0x01, 0x01, 0x01, 0x01, 0x81, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0x40, 0x00,
0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0x70, 0x30, 0x30, 0x38, 0x18, 0x18, 0x18, 0x3C,
0xFC, 0xFC, 0xFC, 0xFC, 0x7C, 0x00, 0x01, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7, 0xC1,
0xC9, 0xED, 0xEC, 0xE4, 0x64, 0x76, 0x36, 0x86, 0xEE, 0xFE, 0xFE, 0xFC, 0xF0, 0x00, 0x00, 0x00,

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC, 0xF8, 0xE0, 0x80,
0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x07, 0x00, 0x00, 0xE0,
0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0x87, 0x83, 0x83, 0xC3, 0xC1, 0xC1, 0x41, 0x01, 0x00, 0x00, 0x00,
0x80, 0xF8, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x39, 0x30, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0xDE, 0x0F,
0x07, 0x07, 0x03, 0x01, 0x00, 0xC0, 0xF8, 0xFF, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x01, 0xC0, 0xE0,
0xF8, 0xFC, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x07, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x80, 0xF0, 0xFE, 0xFF, 0xFF, 0xFF, 0x7F, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFC, 0xF0, 0xF0, 0xFC, 0xFF, 0xFF, 0xFF, 0x7F, 0x0F, 0x01, 0x00, 0xC0, 0xF8, 0xFF, 0xFF,
0xFF, 0xFF, 0x0F, 0x03, 0x03, 0x01, 0x01, 0x81, 0x81, 0x81, 0x80, 0xC0, 0x00, 0x00, 0xE0, 0xFC,
0xFF, 0xFF, 0xFF, 0x7F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F,
0x1E, 0x0C, 0x00, 0x00, 0x8C, 0xCF, 0xC7, 0xE7, 0xE7, 0xF7, 0xF0, 0xF0, 0xFE, 0xFF, 0xFF, 0xFF,
0xFF, 0x7F, 0x3F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xE0, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x1F,
0x7F, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x03, 0x00, 0x00, 0x00, 0x1E, 0x0F, 0x0F, 0x0F, 0x0F,
0x0F, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,
0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xFC,
0x7C, 0x7E, 0x7F, 0x3F, 0x3F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x07, 0x07, 0x03, 0x01, 0x01, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
0x0F, 0x0F, 0x07, 0x07, 0x07, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x38, 0x38,
0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x3C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1E, 0x1E, 0x0E, 0x0E,
0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00l
};


  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // initialize with the I2C addr 0x3D (for the 128x64)
  display.display();  
  tone(SPKR, 400, 100);
  delay(100);
  tone(SPKR, 800, 100);

  analogWrite(flywheelPWM, 100);
  delay(500);  // splash screen
  digitalWrite(flywheelPWM, LOW);
}




void loop() {

  int voltValue = analogRead(voltagePin); 
  int val = 0;
  for (int x=0; x<10; x++){
    val = val + analogRead(voltagePin);
  }
  voltValue = val / 10;
  float voltage = voltValue / 1023.0 * vcc * vd_factor; 

  display.clearDisplay();

  display.drawLine(0, 0, 127, 0, WHITE);
  display.drawLine(0, 0, 0, 63, WHITE);
  display.drawLine(0, 63, 127, 63, WHITE);
  display.drawLine(127, 0, 127, 63, WHITE);
  
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(7, 3);
  display.print(voltage, 2);
  display.println(" v");
  display.println("");
  display.print("  rev: ");
  display.print(digitalRead(revSwitch));
  display.print(F("    MAG:"));
  display.print(digitalRead(clipU6pin));
  display.print(digitalRead(clipU4pin));  
  display.println(digitalRead(clipU3pin));
  
  
  display.print(" butn: ");  
  display.println(digitalRead(buttonPin));
  display.print("   CLP:");
  display.println(digitalRead(CLIP));
  display.print("  DART:");
  display.println(analogRead(DART_IR));
  display.display();

  if (!digitalRead(revSwitch)){
    analogWrite(flywheelPWM, 255);
  }
  else{
    digitalWrite(flywheelPWM, LOW);
  }
  
  Serial.print(voltage, 2);
  Serial.println(" v");
  delay(100);

}
